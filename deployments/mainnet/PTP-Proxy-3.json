{
  "address": "0x822cF9E55f90150159Be97c6Fed336D8CFfaFc1f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platypusVoter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_devAddr",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakerFeeBips",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "boosterFeeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakerFeeReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "boosterFeeReceiver",
              "type": "address"
            }
          ],
          "internalType": "struct PlatypusVoterProxy.FeeSettings",
          "name": "_feeSettings",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PLATYPUS_NFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PTP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "approveStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boosterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boosterFeeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platypusVoter",
      "outputs": [
        {
          "internalType": "contract IPlatypusVoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "poolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reinvestFeeBips",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_boosterFeeBips",
          "type": "uint256"
        }
      ],
      "name": "setBoosterFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_boosterFeeReceiver",
          "type": "address"
        }
      ],
      "name": "setBoosterFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakerFeeBips",
          "type": "uint256"
        }
      ],
      "name": "setStakerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakerFeeReceiver",
          "type": "address"
        }
      ],
      "name": "setStakerFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "stakeNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakerFeeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "sweepNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "updateDevAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vePTP",
      "outputs": [
        {
          "internalType": "contract IVePTP",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSlippage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6ca62631b405a930f7b046cb1fd8cdd11e61a3e100b153c4a9ef3e503c157109",
  "receipt": {
    "to": null,
    "from": "0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44",
    "contractAddress": "0x822cF9E55f90150159Be97c6Fed336D8CFfaFc1f",
    "transactionIndex": 4,
    "gasUsed": "2733878",
    "logsBloom": "0x
    "blockHash": "0xce4e22538f3b1a25de0a05bf08aae147af6a8c6ba1090b79f4545d52fbccb262",
    "transactionHash": "0x6ca62631b405a930f7b046cb1fd8cdd11e61a3e100b153c4a9ef3e503c157109",
    "logs": [],
    "blockNumber": 17090708,
    "cumulativeGasUsed": "3037647",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x40089e90156Fc6F994cc0eC86dbe84634A1C156F",
    "0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44",
    {
      "stakerFeeBips": 1500,
      "boosterFeeBips": 0,
      "stakerFeeReceiver": "0x9bc36cc686800be1905bf7e10578ee6fbdd6f27a",
      "boosterFeeReceiver": "0x0000000000000000000000000000000000000000"
    }
  ],
  "solcInputHash": "e2e83960b088117fd24c6ffcef4dccfe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platypusVoter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devAddr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakerFeeBips\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boosterFeeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakerFeeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"boosterFeeReceiver\",\"type\":\"address\"}],\"internalType\":\"struct PlatypusVoterProxy.FeeSettings\",\"name\":\"_feeSettings\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PLATYPUS_NFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PTP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"approveStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boosterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boosterFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositFee\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platypusVoter\",\"outputs\":[{\"internalType\":\"contract IPlatypusVoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"poolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvestFeeBips\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boosterFeeBips\",\"type\":\"uint256\"}],\"name\":\"setBoosterFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boosterFeeReceiver\",\"type\":\"address\"}],\"name\":\"setBoosterFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakerFeeBips\",\"type\":\"uint256\"}],\"name\":\"setStakerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakerFeeReceiver\",\"type\":\"address\"}],\"name\":\"setStakerFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"stakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"sweepNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"updateDevAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vePTP\",\"outputs\":[{\"internalType\":\"contract IVePTP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For accounting reasons, there is one approved strategy per Masterchef PID. In case of upgrade, use a new proxy.\",\"kind\":\"dev\",\"methods\":{\"approveStrategy(address,address)\":{\"details\":\"Very sensitive, restricted to devAddrCan only be set once per PID and staking contract (reported by the strategy)\",\"params\":{\"_stakingContract\":\"address\",\"_strategy\":\"address\"}},\"claimReward(address,uint256)\":{\"details\":\"Restricted to strategy with _pid\",\"params\":{\"_pid\":\"PID\",\"_stakingContract\":\"Platypus Masterchef\"}},\"deposit(uint256,address,address,address,address,uint256,uint256)\":{\"details\":\"Restricted to strategy with _pid\",\"params\":{\"_amount\":\"deposit amount\",\"_asset\":\"Platypus asset\",\"_depositFee\":\"deposit fee\",\"_pid\":\"PID\",\"_pool\":\"Platypus pool\",\"_stakingContract\":\"Platypus Masterchef\",\"_token\":\"Deposit asset\"}},\"emergencyWithdraw(uint256,address,address,address,address)\":{\"details\":\"Restricted to strategy with _pid\",\"params\":{\"_asset\":\"Platypus asset\",\"_pid\":\"PID\",\"_pool\":\"Platypus pool\",\"_stakingContract\":\"Platypus Masterchef\",\"_token\":\"Deposit asset\"}},\"pendingRewards(address,uint256)\":{\"params\":{\"_pid\":\"PID\",\"_stakingContract\":\"Platypus Masterchef\"},\"returns\":{\"_0\":\"pendingPtp\",\"_1\":\"pendingBonusToken\",\"_2\":\"bonusTokenAddress\"}},\"poolBalance(address,uint256)\":{\"params\":{\"_pid\":\"PID\",\"_stakingContract\":\"Platypus Masterchef\"},\"returns\":{\"balance\":\"in depositToken\"}},\"reinvestFeeBips()\":{\"returns\":{\"_0\":\"reinvest fee\"}},\"setBoosterFee(uint256)\":{\"details\":\"Restricted to devAddr\",\"params\":{\"_boosterFeeBips\":\"new fee in bips (1% = 100 bips)\"}},\"setBoosterFeeReceiver(address)\":{\"details\":\"Restricted to devAddr\",\"params\":{\"_boosterFeeReceiver\":\"address\"}},\"setStakerFee(uint256)\":{\"details\":\"Restricted to devAddr\",\"params\":{\"_stakerFeeBips\":\"new fee in bips (1% = 100 bips)\"}},\"setStakerFeeReceiver(address)\":{\"details\":\"Restricted to devAddr\",\"params\":{\"_stakerFeeReceiver\":\"address\"}},\"stakeNFT(uint256)\":{\"details\":\"Restricted to devAddr.The currently staked NFT will be automatically unstaked and remain on voter. Use \\\"sweepNFT\\\" to get it back.\",\"params\":{\"id\":\"id of the NFT to be staked\"}},\"sweepNFT(uint256)\":{\"details\":\"Restricted to devAddr.\",\"params\":{\"id\":\"id of the NFT to be swept\"}},\"unstakeNFT()\":{\"details\":\"Restricted to devAddr.The unstaked NFT will remain on voter. Use \\\"sweepNFT\\\" to get it back.\"},\"updateDevAddr(address)\":{\"params\":{\"newValue\":\"address\"}},\"withdraw(uint256,address,address,address,address,uint256,uint256)\":{\"details\":\"Restricted to strategy with _pid\",\"params\":{\"_amount\":\"withdraw amount\",\"_asset\":\"Platypus asset\",\"_maxSlippage\":\"max slippage in bips\",\"_pid\":\"PID\",\"_pool\":\"Platypus pool\",\"_stakingContract\":\"Platypus Masterchef\",\"_token\":\"Deposit asset\"},\"returns\":{\"_0\":\"amount withdrawn, in _token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveStrategy(address,address)\":{\"notice\":\"Add an approved strategy\"},\"claimReward(address,uint256)\":{\"notice\":\"Claim and distribute PTP rewards\"},\"deposit(uint256,address,address,address,address,uint256,uint256)\":{\"notice\":\"Deposit function\"},\"emergencyWithdraw(uint256,address,address,address,address)\":{\"notice\":\"Emergency withdraw function\"},\"pendingRewards(address,uint256)\":{\"notice\":\"Pending rewards matching interface for PlatypusStrategy\"},\"poolBalance(address,uint256)\":{\"notice\":\"Pool balance\"},\"reinvestFeeBips()\":{\"notice\":\"Calculation of reinvest fee (boost + staking)\"},\"setBoosterFee(uint256)\":{\"notice\":\"Update booster fee\"},\"setBoosterFeeReceiver(address)\":{\"notice\":\"Update booster fee receiver\"},\"setStakerFee(uint256)\":{\"notice\":\"Update staker fee\"},\"setStakerFeeReceiver(address)\":{\"notice\":\"Update staker fee receiver\"},\"stakeNFT(uint256)\":{\"notice\":\"Stake NFT \"},\"sweepNFT(uint256)\":{\"notice\":\"Sweep NFT\"},\"unstakeNFT()\":{\"notice\":\"Unstake the currently staked NFT \"},\"updateDevAddr(address)\":{\"notice\":\"Update devAddr\"},\"withdraw(uint256,address,address,address,address,uint256,uint256)\":{\"notice\":\"Withdraw function\"}},\"notice\":\"PlatypusVoterProxy is an upgradable contract. Strategies interact with PlatypusVoterProxy and PlatypusVoterProxy interacts with PlatypusVoter.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/platypus/PlatypusVoterProxy.sol\":\"PlatypusVoterProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x13986c2d371de8b29ffbbd5c2a5daa3fe6801801ba3b09530dbfc714d239adcb\",\"license\":\"MIT\"},\"contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9308fda9e9c7221936f36c2656f45522eda68c8474d21db131dbf1ea5a2dc83d\",\"license\":\"MIT\"},\"contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb0e33a6c916e2b3c1669c15106d704c72403bb6c102dd1e48ed99a1fca92988\",\"license\":\"MIT\"},\"contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c0187783bd30018a8dddffa7e5aff1ad044dc6b7d63feca5010fdcb8dab2bac\",\"license\":\"MIT\"},\"contracts/strategies/platypus/PlatypusVoterProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../../lib/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IPlatypusVoter.sol\\\";\\nimport \\\"./interfaces/IMasterPlatypus.sol\\\";\\nimport \\\"./interfaces/IMasterPlatypusV2.sol\\\";\\nimport \\\"./interfaces/IPlatypusPool.sol\\\";\\nimport \\\"./interfaces/IPlatypusAsset.sol\\\";\\nimport \\\"./interfaces/IPlatypusNFT.sol\\\";\\nimport \\\"./interfaces/IVePTP.sol\\\";\\nimport \\\"./interfaces/IPlatypusStrategy.sol\\\";\\nimport \\\"./interfaces/IPlatypusVoterProxy.sol\\\";\\n\\nlibrary SafeProxy {\\n    function safeExecute(\\n        IPlatypusVoter platypusVoter,\\n        address target,\\n        uint256 value,\\n        bytes memory data\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returnValue) = platypusVoter.execute(target, value, data);\\n        if (!success) revert(\\\"PlatypusVoterProxy::safeExecute failed\\\");\\n        return returnValue;\\n    }\\n}\\n\\n/**\\n * @notice PlatypusVoterProxy is an upgradable contract.\\n * Strategies interact with PlatypusVoterProxy and\\n * PlatypusVoterProxy interacts with PlatypusVoter.\\n * @dev For accounting reasons, there is one approved\\n * strategy per Masterchef PID. In case of upgrade,\\n * use a new proxy.\\n */\\ncontract PlatypusVoterProxy is IPlatypusVoterProxy {\\n    using SafeProxy for IPlatypusVoter;\\n    using SafeERC20 for IERC20;\\n\\n    struct FeeSettings {\\n        uint256 stakerFeeBips;\\n        uint256 boosterFeeBips;\\n        address stakerFeeReceiver;\\n        address boosterFeeReceiver;\\n    }\\n\\n    uint256 internal constant BIPS_DIVISOR = 10000;\\n    address internal constant WAVAX = 0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7;\\n\\n    uint256 public boosterFee;\\n    uint256 public stakerFee;\\n    address public stakerFeeReceiver;\\n    address public boosterFeeReceiver;\\n    address public constant PTP = 0x22d4002028f537599bE9f666d1c4Fa138522f9c8;\\n    address public constant PLATYPUS_NFT = 0x6A04a578247e15e3c038AcF2686CA00A624a5aa0;\\n    IVePTP public constant vePTP = IVePTP(0x5857019c749147EEE22b1Fe63500F237F3c1B692);\\n\\n    IPlatypusVoter public immutable override platypusVoter;\\n    address public devAddr;\\n\\n    // staking contract => pid => strategy\\n    mapping(address => mapping(uint256 => address)) private approvedStrategies;\\n    address private constant MASTERCHEF_V1 = 0xB0523f9F473812FB195Ee49BC7d2ab9873a98044;\\n\\n    modifier onlyDev() {\\n        require(msg.sender == devAddr, \\\"PlatypusVoterProxy::onlyDev\\\");\\n        _;\\n    }\\n\\n    modifier onlyStrategy(address _stakingContract, uint256 _pid) {\\n        require(approvedStrategies[_stakingContract][_pid] == msg.sender, \\\"PlatypusVoterProxy::onlyStrategy\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _platypusVoter,\\n        address _devAddr,\\n        FeeSettings memory _feeSettings\\n    ) {\\n        devAddr = _devAddr;\\n        boosterFee = _feeSettings.boosterFeeBips;\\n        stakerFee = _feeSettings.stakerFeeBips;\\n        stakerFeeReceiver = _feeSettings.stakerFeeReceiver;\\n        boosterFeeReceiver = _feeSettings.boosterFeeReceiver;\\n        platypusVoter = IPlatypusVoter(_platypusVoter);\\n    }\\n\\n    /**\\n     * @notice Update devAddr\\n     * @param newValue address\\n     */\\n    function updateDevAddr(address newValue) external onlyDev {\\n        devAddr = newValue;\\n    }\\n\\n    /**\\n     * @notice Add an approved strategy\\n     * @dev Very sensitive, restricted to devAddr\\n     * @dev Can only be set once per PID and staking contract (reported by the strategy)\\n     * @param _stakingContract address\\n     * @param _strategy address\\n     */\\n    function approveStrategy(address _stakingContract, address _strategy) external override onlyDev {\\n        uint256 pid = IPlatypusStrategy(_strategy).PID();\\n        require(\\n            approvedStrategies[_stakingContract][pid] == address(0),\\n            \\\"PlatypusVoterProxy::Strategy for PID already added\\\"\\n        );\\n        approvedStrategies[_stakingContract][pid] = _strategy;\\n    }\\n\\n    /**\\n     * @notice Update booster fee\\n     * @dev Restricted to devAddr\\n     * @param _boosterFeeBips new fee in bips (1% = 100 bips)\\n     */\\n    function setBoosterFee(uint256 _boosterFeeBips) external onlyDev {\\n        boosterFee = _boosterFeeBips;\\n    }\\n\\n    /**\\n     * @notice Update staker fee\\n     * @dev Restricted to devAddr\\n     * @param _stakerFeeBips new fee in bips (1% = 100 bips)\\n     */\\n    function setStakerFee(uint256 _stakerFeeBips) external onlyDev {\\n        stakerFee = _stakerFeeBips;\\n    }\\n\\n    /**\\n     * @notice Update booster fee receiver\\n     * @dev Restricted to devAddr\\n     * @param _boosterFeeReceiver address\\n     */\\n    function setBoosterFeeReceiver(address _boosterFeeReceiver) external onlyDev {\\n        boosterFeeReceiver = _boosterFeeReceiver;\\n    }\\n\\n    /**\\n     * @notice Update staker fee receiver\\n     * @dev Restricted to devAddr\\n     * @param _stakerFeeReceiver address\\n     */\\n    function setStakerFeeReceiver(address _stakerFeeReceiver) external onlyDev {\\n        stakerFeeReceiver = _stakerFeeReceiver;\\n    }\\n\\n    /**\\n     * @notice Stake NFT \\n     * @dev Restricted to devAddr.\\n     * @dev The currently staked NFT will be automatically unstaked and remain on voter. Use \\\"sweepNFT\\\" to get it back.\\n     * @param id id of the NFT to be staked\\n     */\\n    function stakeNFT(uint256 id) external onlyDev {\\n        if (IERC721(PLATYPUS_NFT).ownerOf(id) != address(platypusVoter)) {\\n            IERC721(PLATYPUS_NFT).transferFrom(msg.sender, address(platypusVoter), id);\\n        }\\n\\n        platypusVoter.safeExecute(\\n            PLATYPUS_NFT,\\n            0,\\n            abi.encodeWithSignature(\\\"approve(address,uint256)\\\", address(vePTP), id)\\n        );\\n        platypusVoter.safeExecute(address(vePTP), 0, abi.encodeWithSignature(\\\"stakeNft(uint256)\\\", id));\\n    }\\n\\n    /**\\n     * @notice Unstake the currently staked NFT \\n     * @dev Restricted to devAddr.\\n     * @dev The unstaked NFT will remain on voter. Use \\\"sweepNFT\\\" to get it back.\\n     */\\n    function unstakeNFT() external onlyDev {\\n        platypusVoter.safeExecute(address(vePTP), 0, abi.encodeWithSignature(\\\"unstakeNft()\\\"));\\n    }\\n\\n    /**\\n     * @notice Sweep NFT\\n     * @dev Restricted to devAddr.\\n     * @param id id of the NFT to be swept\\n     */\\n    function sweepNFT(uint256 id) public onlyDev {\\n        platypusVoter.safeExecute(\\n            PLATYPUS_NFT,\\n            0,\\n            abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", address(platypusVoter), msg.sender, id)\\n        );\\n    }\\n\\n    /**\\n     * @notice Deposit function\\n     * @dev Restricted to strategy with _pid\\n     * @param _pid PID\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _pool Platypus pool\\n     * @param _token Deposit asset\\n     * @param _asset Platypus asset\\n     * @param _amount deposit amount\\n     * @param _depositFee deposit fee\\n     */\\n    function deposit(\\n        uint256 _pid,\\n        address _stakingContract,\\n        address _pool,\\n        address _token,\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _depositFee\\n    ) external override onlyStrategy(_stakingContract, _pid) {\\n        uint256 liquidity = _depositTokenToAsset(_asset, _amount, _depositFee);\\n        IERC20(_token).safeApprove(_pool, _amount);\\n        IPlatypusPool(_pool).deposit(address(_token), _amount, address(platypusVoter), type(uint256).max);\\n        platypusVoter.safeExecute(\\n            _asset,\\n            0,\\n            abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _stakingContract, liquidity)\\n        );\\n        platypusVoter.safeExecute(\\n            _stakingContract,\\n            0,\\n            abi.encodeWithSignature(\\\"deposit(uint256,uint256)\\\", _pid, liquidity)\\n        );\\n        platypusVoter.safeExecute(_asset, 0, abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _stakingContract, 0));\\n    }\\n\\n    /**\\n     * @notice Conversion for deposit token to Platypus asset\\n     * @return liquidity amount of LP tokens\\n     */\\n    function _depositTokenToAsset(\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _depositFee\\n    ) private view returns (uint256 liquidity) {\\n        if (IPlatypusAsset(_asset).liability() == 0) {\\n            liquidity = _amount - _depositFee;\\n        } else {\\n            liquidity =\\n                ((_amount - _depositFee) * IPlatypusAsset(_asset).totalSupply()) /\\n                IPlatypusAsset(_asset).liability();\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculation of reinvest fee (boost + staking)\\n     * @return reinvest fee\\n     */\\n    function reinvestFeeBips() external view override returns (uint256) {\\n        uint256 boostFee = 0;\\n        if (boosterFee > 0 && boosterFeeReceiver > address(0) && platypusVoter.depositsEnabled()) {\\n            boostFee = boosterFee;\\n        }\\n\\n        uint256 stakingFee = 0;\\n        if (stakerFee > 0 && stakerFeeReceiver > address(0)) {\\n            stakingFee = stakerFee;\\n        }\\n        return boostFee + stakingFee;\\n    }\\n\\n    /**\\n     * @notice Calculation of withdraw fee\\n     * @param _pool Platypus pool\\n     * @param _token Withdraw token\\n     * @param _amount Withdraw amount, in _token\\n     * @return fee Withdraw fee\\n     */\\n    function _calculateWithdrawFee(\\n        address _pool,\\n        address _token,\\n        uint256 _amount\\n    ) private view returns (uint256 fee) {\\n        (, fee, ) = IPlatypusPool(_pool).quotePotentialWithdraw(_token, _amount);\\n    }\\n\\n    /**\\n     * @notice Conversion for handling withdraw\\n     * @param _pid PID\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _amount withdraw amount in deposit asset\\n     * @return liquidity LP tokens\\n     */\\n    function _depositTokenToAssetForWithdrawal(\\n        uint256 _pid,\\n        address _stakingContract,\\n        uint256 _amount\\n    ) private view returns (uint256) {\\n        uint256 totalDeposits = _poolBalance(_stakingContract, _pid);\\n        (uint256 balance, , ) = IMasterPlatypus(_stakingContract).userInfo(_pid, address(platypusVoter));\\n        return (_amount * balance) / totalDeposits;\\n    }\\n\\n    /**\\n     * @notice Withdraw function\\n     * @dev Restricted to strategy with _pid\\n     * @param _pid PID\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _pool Platypus pool\\n     * @param _token Deposit asset\\n     * @param _asset Platypus asset\\n     * @param _maxSlippage max slippage in bips\\n     * @param _amount withdraw amount\\n     * @return amount withdrawn, in _token\\n     */\\n    function withdraw(\\n        uint256 _pid,\\n        address _stakingContract,\\n        address _pool,\\n        address _token,\\n        address _asset,\\n        uint256 _maxSlippage,\\n        uint256 _amount\\n    ) external override onlyStrategy(_stakingContract, _pid) returns (uint256) {\\n        uint256 liquidity = _depositTokenToAssetForWithdrawal(_pid, _stakingContract, _amount);\\n        platypusVoter.safeExecute(\\n            _stakingContract,\\n            0,\\n            abi.encodeWithSignature(\\\"withdraw(uint256,uint256)\\\", _pid, liquidity)\\n        );\\n        platypusVoter.safeExecute(_asset, 0, abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _pool, liquidity));\\n        uint256 minimumReceive = liquidity - _calculateWithdrawFee(_pool, _token, liquidity);\\n        uint256 slippage = (minimumReceive * _maxSlippage) / BIPS_DIVISOR;\\n        minimumReceive = minimumReceive - slippage;\\n        bytes memory result = platypusVoter.safeExecute(\\n            _pool,\\n            0,\\n            abi.encodeWithSignature(\\n                \\\"withdraw(address,uint256,uint256,address,uint256)\\\",\\n                _token,\\n                liquidity,\\n                minimumReceive,\\n                address(this),\\n                type(uint256).max\\n            )\\n        );\\n        platypusVoter.safeExecute(_asset, 0, abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _pool, 0));\\n        uint256 amount = toUint256(result, 0);\\n        IERC20(_token).safeTransfer(msg.sender, amount);\\n\\n        return amount;\\n    }\\n\\n    /**\\n     * @notice Emergency withdraw function\\n     * @dev Restricted to strategy with _pid\\n     * @param _pid PID\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _pool Platypus pool\\n     * @param _token Deposit asset\\n     * @param _asset Platypus asset\\n     */\\n    function emergencyWithdraw(\\n        uint256 _pid,\\n        address _stakingContract,\\n        address _pool,\\n        address _token,\\n        address _asset\\n    ) external override onlyStrategy(_stakingContract, _pid) {\\n        platypusVoter.safeExecute(_stakingContract, 0, abi.encodeWithSignature(\\\"emergencyWithdraw(uint256)\\\", _pid));\\n        uint256 balance = IERC20(_asset).balanceOf(address(platypusVoter));\\n        (uint256 expectedAmount, , ) = IPlatypusPool(_pool).quotePotentialWithdraw(_token, balance);\\n        platypusVoter.safeExecute(_asset, 0, abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _pool, balance));\\n        platypusVoter.safeExecute(\\n            _pool,\\n            0,\\n            abi.encodeWithSignature(\\n                \\\"withdraw(address,uint256,uint256,address,uint256)\\\",\\n                _token,\\n                balance,\\n                expectedAmount,\\n                msg.sender,\\n                type(uint256).max\\n            )\\n        );\\n        platypusVoter.safeExecute(_asset, 0, abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _stakingContract, 0));\\n        platypusVoter.safeExecute(_token, 0, abi.encodeWithSignature(\\\"approve(address,uint256)\\\", _pool, 0));\\n    }\\n\\n    /**\\n     * @notice Pending rewards matching interface for PlatypusStrategy\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _pid PID\\n     * @return pendingPtp\\n     * @return pendingBonusToken\\n     * @return bonusTokenAddress\\n     */\\n    function pendingRewards(address _stakingContract, uint256 _pid)\\n        external\\n        view\\n        override\\n        returns (\\n            uint256,\\n            uint256,\\n            address\\n        )\\n    {\\n        (uint256 pendingPtp, address bonusTokenAddress, , uint256 pendingBonusToken) = IMasterPlatypus(_stakingContract)\\n            .pendingTokens(_pid, address(platypusVoter));\\n\\n        return (pendingPtp, pendingBonusToken, bonusTokenAddress);\\n    }\\n\\n    /**\\n     * @notice Pool balance\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _pid PID\\n     * @return balance in depositToken\\n     */\\n    function poolBalance(address _stakingContract, uint256 _pid) external view override returns (uint256 balance) {\\n        return _poolBalance(_stakingContract, _pid);\\n    }\\n\\n    function _poolBalance(address _stakingContract, uint256 _pid) internal view returns (uint256 balance) {\\n        (uint256 assetBalance, , ) = IMasterPlatypus(_stakingContract).userInfo(_pid, address(platypusVoter));\\n        if (assetBalance == 0) return 0;\\n        address asset;\\n        if (_stakingContract == MASTERCHEF_V1) {\\n            (asset, , , , , , ) = IMasterPlatypus(_stakingContract).poolInfo(_pid);\\n        } else {\\n            (asset, , , , , , , ) = IMasterPlatypusV2(_stakingContract).poolInfo(_pid);\\n        }\\n        IPlatypusPool pool = IPlatypusPool(IPlatypusAsset(asset).pool());\\n        (uint256 expectedAmount, uint256 fee, bool enoughCash) = pool.quotePotentialWithdraw(\\n            IPlatypusAsset(asset).underlyingToken(),\\n            assetBalance\\n        );\\n        require(enoughCash, \\\"PlatypusVoterProxy::This shouldn't happen\\\");\\n        return expectedAmount + fee;\\n    }\\n\\n    /**\\n     * @notice Claim and distribute PTP rewards\\n     * @dev Restricted to strategy with _pid\\n     * @param _stakingContract Platypus Masterchef\\n     * @param _pid PID\\n     */\\n    function claimReward(address _stakingContract, uint256 _pid)\\n        external\\n        override\\n        onlyStrategy(_stakingContract, _pid)\\n    {\\n        (address bonusTokenAddress, ) = IMasterPlatypus(_stakingContract).rewarderBonusTokenInfo(_pid);\\n\\n        platypusVoter.safeExecute(_stakingContract, 0, abi.encodeWithSignature(\\\"deposit(uint256,uint256)\\\", _pid, 0));\\n        if (bonusTokenAddress == WAVAX) {\\n            platypusVoter.wrapAvaxBalance();\\n        }\\n\\n        uint256 pendingPtp = IERC20(PTP).balanceOf(address(platypusVoter));\\n        uint256 pendingBonusToken = bonusTokenAddress > address(0)\\n            ? IERC20(bonusTokenAddress).balanceOf(address(platypusVoter))\\n            : 0;\\n\\n        if (pendingPtp > 0) {\\n            uint256 boostFee = 0;\\n            if (boosterFee > 0 && boosterFeeReceiver > address(0) && platypusVoter.depositsEnabled()) {\\n                boostFee = (pendingPtp * boosterFee) / BIPS_DIVISOR;\\n                platypusVoter.depositFromBalance(boostFee);\\n                IERC20(address(platypusVoter)).safeTransfer(boosterFeeReceiver, boostFee);\\n            }\\n\\n            uint256 stakingFee = 0;\\n            if (stakerFee > 0 && stakerFeeReceiver > address(0)) {\\n                stakingFee = (pendingPtp * stakerFee) / BIPS_DIVISOR;\\n                platypusVoter.safeExecute(\\n                    PTP,\\n                    0,\\n                    abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", stakerFeeReceiver, stakingFee)\\n                );\\n            }\\n\\n            uint256 reward = pendingPtp - boostFee - stakingFee;\\n            platypusVoter.safeExecute(PTP, 0, abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", msg.sender, reward));\\n        }\\n\\n        if (pendingBonusToken > 0) {\\n            platypusVoter.safeExecute(\\n                bonusTokenAddress,\\n                0,\\n                abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", msg.sender, pendingBonusToken)\\n            );\\n        }\\n\\n        if (platypusVoter.vePTPBalance() > 0) {\\n            platypusVoter.claimVePTP();\\n        }\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint256 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n}\\n\",\"keccak256\":\"0x9d28261573d0ad7085522f765b5ae2b6d8bedafbe50d1a4474fefd94a9923a19\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IMasterPlatypus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IMasterPlatypus {\\n    function poolLength() external view returns (uint256);\\n\\n    function pendingTokens(uint256 _pid, address _user)\\n        external\\n        view\\n        returns (\\n            uint256 pendingPtp,\\n            address bonusTokenAddress,\\n            string memory bonusTokenSymbol,\\n            uint256 pendingBonusToken\\n        );\\n\\n    function rewarderBonusTokenInfo(uint256 _pid)\\n        external\\n        view\\n        returns (address bonusTokenAddress, string memory bonusTokenSymbol);\\n\\n    function massUpdatePools() external;\\n\\n    function updatePool(uint256 _pid) external;\\n\\n    function deposit(uint256 _pid, uint256 _amount) external returns (uint256, uint256);\\n\\n    function multiClaim(uint256[] memory _pids)\\n        external\\n        returns (\\n            uint256,\\n            uint256[] memory,\\n            uint256[] memory\\n        );\\n\\n    function withdraw(uint256 _pid, uint256 _amount) external returns (uint256, uint256);\\n\\n    function emergencyWithdraw(uint256 _pid) external;\\n\\n    function migrate(uint256[] calldata _pids) external;\\n\\n    function depositFor(\\n        uint256 _pid,\\n        uint256 _amount,\\n        address _user\\n    ) external;\\n\\n    function updateFactor(address _user, uint256 _newVePtpBalance) external;\\n\\n    function userInfo(uint256 _pid, address _user)\\n        external\\n        view\\n        returns (\\n            uint256 _amount,\\n            uint256 _rewardDebt,\\n            uint256 _factor\\n        );\\n\\n    function poolInfo(uint256 _pid)\\n        external\\n        view\\n        returns (\\n            address _lpToken,\\n            uint256 _allocPoint,\\n            uint256 _lastRewardTimestamp,\\n            uint256 _accPtpPerShare,\\n            address _rewarder,\\n            uint256 _sumOfFactors,\\n            uint256 _accPtpPerFactorShare\\n        );\\n}\\n\",\"keccak256\":\"0x10edc108aee5deb8d6ff8d96da926b16feb400d7bddbe1b8b14c8ad1bd2f12fe\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IMasterPlatypusV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IMasterPlatypusV2 {\\n    function poolLength() external view returns (uint256);\\n\\n    function pendingTokens(uint256 _pid, address _user)\\n        external\\n        view\\n        returns (\\n            uint256 pendingPtp,\\n            address bonusTokenAddress,\\n            string memory bonusTokenSymbol,\\n            uint256 pendingBonusToken\\n        );\\n\\n    function rewarderBonusTokenInfo(uint256 _pid)\\n        external\\n        view\\n        returns (address bonusTokenAddress, string memory bonusTokenSymbol);\\n\\n    function massUpdatePools() external;\\n\\n    function updatePool(uint256 _pid) external;\\n\\n    function deposit(uint256 _pid, uint256 _amount) external returns (uint256, uint256);\\n\\n    function multiClaim(uint256[] memory _pids)\\n        external\\n        returns (\\n            uint256,\\n            uint256[] memory,\\n            uint256[] memory\\n        );\\n\\n    function withdraw(uint256 _pid, uint256 _amount) external returns (uint256, uint256);\\n\\n    function emergencyWithdraw(uint256 _pid) external;\\n\\n    function migrate(uint256[] calldata _pids) external;\\n\\n    function depositFor(\\n        uint256 _pid,\\n        uint256 _amount,\\n        address _user\\n    ) external;\\n\\n    function updateFactor(address _user, uint256 _newVePtpBalance) external;\\n\\n    function userInfo(uint256 _pid, address _user)\\n        external\\n        view\\n        returns (\\n            uint256 _amount,\\n            uint256 _rewardDebt,\\n            uint256 _factor\\n        );\\n\\n    function poolInfo(uint256 _pid)\\n        external\\n        view\\n        returns (\\n            address _lpToken,\\n            uint256 _allocPoint,\\n            uint256 _lastRewardTimestamp,\\n            uint256 _accPtpPerShare,\\n            address _rewarder,\\n            uint256 _sumOfFactors,\\n            uint256 _accPtpPerFactorShare,\\n            uint256 _adjustedAllocPoint\\n        );\\n}\\n\",\"keccak256\":\"0x2aaed0df2db69e2c59d9a26970003c9bbe7dbef621388f9c990815563037b50d\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IPlatypusAsset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IPlatypusAsset {\\n    function cash() external view returns (uint256);\\n\\n    function liability() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function pool() external view returns (address);\\n\\n    function underlyingToken() external view returns (address);\\n}\\n\",\"keccak256\":\"0xbbf22f57ab3ede7d0ba9e0b4167fc8be9f1268ab15ccd26cd3cc1e7a9cf9da5d\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IPlatypusNFT.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.13;\\n\\nimport \\\"../../../interfaces/IERC721.sol\\\";\\n\\ninterface IPlatypusNFT is IERC721 {\\n    struct Platypus {\\n        uint16 level;\\n        uint16 score;\\n        // Attributes ( 0 - 9 | D4 D3 D2 D1 C3 C2 C1 B1 B2 A)\\n        uint8 eyes;\\n        uint8 mouth;\\n        uint8 skin;\\n        uint8 clothes;\\n        uint8 tail;\\n        uint8 accessories;\\n        uint8 bg;\\n        // Abilities\\n        // 0 - Speedo\\n        // 1 - Pudgy\\n        // 2 - Diligent\\n        // 3 - Gifted\\n        // 4 - Hibernate\\n        uint8[5] ability;\\n        uint32[5] power;\\n        uint256 xp;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function getPrice() external view returns (uint256);\\n\\n    function availableTotalSupply() external view returns (uint256);\\n\\n    /*///////////////////////////////////////////////////////////////\\n        CONTRACT MANAGEMENT OPERATIONS / SALES\\n    //////////////////////////////////////////////////////////////*/\\n    function owner() external view returns (address);\\n\\n    function ownerCandidate() external view returns (address);\\n\\n    function proposeOwner(address newOwner) external;\\n\\n    function acceptOwnership() external;\\n\\n    function cancelOwnerProposal() external;\\n\\n    function increaseAvailableTotalSupply(uint256 amount) external;\\n\\n    function changeMintCost(\\n        uint256 publicCost,\\n        uint256 wlCost,\\n        uint256 veCost\\n    ) external;\\n\\n    function setSaleDetails(\\n        uint256 _preSaleOpenTime,\\n        bytes32 _wlRoot,\\n        bytes32 _veRoot,\\n        bytes32 _freeRoot,\\n        uint256 _reserved\\n    ) external;\\n\\n    function preSaleOpenTime() external view returns (uint256);\\n\\n    function withdrawPTP() external;\\n\\n    function setNewRoyaltyDetails(address _newAddress, uint256 _newFee) external;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                        PLATYPUS LEVEL MECHANICS\\n            Caretakers are other authorized contracts that\\n                according to their own logic can issue a platypus\\n                    to level up\\n    //////////////////////////////////////////////////////////////*/\\n    function caretakers(address) external view returns (uint256);\\n\\n    function addCaretaker(address caretaker) external;\\n\\n    function removeCaretaker(address caretaker) external;\\n\\n    function growXp(uint256 tokenId, uint256 xp) external;\\n\\n    function levelUp(\\n        uint256 tokenId,\\n        uint256 newAbility,\\n        uint256 newPower\\n    ) external;\\n\\n    function levelDown(uint256 tokenId) external;\\n\\n    function burn(uint256 tokenId) external;\\n\\n    function changePlatypusName(uint256 tokenId, string calldata name) external;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            PLATYPUS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function getPlatypusXp(uint256 tokenId) external view returns (uint256 xp);\\n\\n    function getPlatypusLevel(uint256 tokenId) external view returns (uint16 level);\\n\\n    function getPrimaryAbility(uint256 tokenId) external view returns (uint8 ability, uint32 power);\\n\\n    function getPlatypusDetails(uint256 tokenId)\\n        external\\n        view\\n        returns (\\n            uint32 speedo,\\n            uint32 pudgy,\\n            uint32 diligent,\\n            uint32 gifted,\\n            uint32 hibernate\\n        );\\n\\n    function platypusesLength() external view returns (uint256);\\n\\n    function setBaseURI(string memory _baseURI) external;\\n\\n    function setNameFee(uint256 _nameFee) external;\\n\\n    function getPlatypusName(uint256 tokenId) external view returns (string memory name);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            MINTING\\n    //////////////////////////////////////////////////////////////*/\\n    function normalMint(uint256 numberOfMints) external;\\n\\n    function veMint(\\n        uint256 numberOfMints,\\n        uint256 totalGiven,\\n        bytes32[] memory proof\\n    ) external;\\n\\n    function wlMint(\\n        uint256 numberOfMints,\\n        uint256 totalGiven,\\n        bytes32[] memory proof\\n    ) external;\\n\\n    function freeMint(\\n        uint256 numberOfMints,\\n        uint256 totalGiven,\\n        bytes32[] memory proof\\n    ) external;\\n\\n    // comment to disable a slither false allert: PlatypusNFT does not implement functions\\n    // function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n    function _jsonString(uint256 tokenId) external view returns (string memory);\\n\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                                EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n    // event OwnerUpdated(address indexed newOwner);\\n\\n    // ERC2981.sol\\n    // event ChangeRoyalty(address newAddress, uint256 newFee);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                                ERRORS\\n    //////////////////////////////////////////////////////////////*/\\n    // error FeeTooHigh();\\n    // error InvalidCaretaker();\\n    // error InvalidTokenID();\\n    // error MintLimit();\\n    // error PreSaleEnded();\\n    // error TicketError();\\n    // error TooSoon();\\n    // error Unauthorized();\\n}\\n\",\"keccak256\":\"0xe703272b1103ee4fc7356270290e17a368c1e897703e8d2667c85cecab6c6b7f\",\"license\":\"UNLICENSED\"},\"contracts/strategies/platypus/interfaces/IPlatypusPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IPlatypusPool {\\n    function assetOf(address token) external view returns (address);\\n\\n    function deposit(\\n        address to,\\n        uint256 amount,\\n        address token,\\n        uint256 deadline\\n    ) external returns (uint256);\\n\\n    function withdraw(\\n        address token,\\n        uint256 liquidity,\\n        uint256 minimumAmount,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256);\\n\\n    function getHaircutRate() external view returns (uint256);\\n\\n    function quotePotentialWithdraw(address token, uint256 liquidity)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            bool\\n        );\\n\\n    function getC1() external view returns (uint256);\\n\\n    function getXThreshold() external view returns (uint256);\\n\\n    function getSlippageParamK() external view returns (uint256);\\n\\n    function getSlippageParamN() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3f0f782042eff8c0cbe26e594243ab6267eeb31560792babc301cbbdc7f66f90\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IPlatypusStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IPlatypusStrategy {\\n    function PID() external returns (uint256);\\n}\\n\",\"keccak256\":\"0x55897f1638973f3e80b02ec25dfec167ee57da007edef272923e198fd0aa51a2\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IPlatypusVoter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IPlatypusVoter {\\n    function execute(\\n        address to,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool, bytes memory);\\n\\n    function vePTPBalance() external view returns (uint256);\\n\\n    function wrapAvaxBalance() external returns (uint256);\\n\\n    function depositsEnabled() external view returns (bool);\\n\\n    function deposit(uint256 _amount) external;\\n\\n    function depositFromBalance(uint256 _value) external;\\n\\n    function setVoterProxy(address _voterProxy) external;\\n\\n    function claimVePTP() external;\\n}\\n\",\"keccak256\":\"0x7827dd64a8acaed1dfaed78260b8e010b395f90f7e19614557570fae47078bc1\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IPlatypusVoterProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./IPlatypusVoter.sol\\\";\\n\\ninterface IPlatypusVoterProxy {\\n    function withdraw(\\n        uint256 _pid,\\n        address _stakingContract,\\n        address _pool,\\n        address _token,\\n        address _asset,\\n        uint256 _maxSlippage,\\n        uint256 _amount\\n    ) external returns (uint256);\\n\\n    function emergencyWithdraw(\\n        uint256 _pid,\\n        address _stakingContract,\\n        address _pool,\\n        address _token,\\n        address _asset\\n    ) external;\\n\\n    function deposit(\\n        uint256 _pid,\\n        address _stakingContract,\\n        address _pool,\\n        address _token,\\n        address _asset,\\n        uint256 _amount,\\n        uint256 _depositFee\\n    ) external;\\n\\n    function pendingRewards(address _stakingContract, uint256 _pid)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            address\\n        );\\n\\n    function poolBalance(address _stakingContract, uint256 _pid) external view returns (uint256);\\n\\n    function platypusVoter() external view returns (IPlatypusVoter);\\n\\n    function claimReward(address _stakingContract, uint256 _pid) external;\\n\\n    function approveStrategy(address _stakingContract, address _strategy) external;\\n\\n    function reinvestFeeBips() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xfcc2e3d12bda9990de184c871089dad4c40fd443f968ed9d8211677bf895d938\",\"license\":\"MIT\"},\"contracts/strategies/platypus/interfaces/IVePTP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IVePTP {\\n    function deposit(uint256 _amount) external;\\n\\n    function claim() external;\\n\\n    function claimable(address _addr) external view;\\n\\n    function withdraw(uint256 _amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function users(address user)\\n        external\\n        view\\n        returns (\\n            uint256 amount,\\n            uint256 lastRelease,\\n            uint256 stakedNftId\\n        );\\n}\\n\",\"keccak256\":\"0x0600d3af9ac86eb29a60395375b8e0c0f3372059c064bd31489d8c48828ef86c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200318c3803806200318c8339810160408190526200003491620000ae565b600480546001600160a01b03199081166001600160a01b039485161790915560208201516000558151600155604082015160028054831691851691909117905560609091015160038054909216908316179055166080526200016c565b80516001600160a01b0381168114620000a957600080fd5b919050565b600080600083850360c0811215620000c557600080fd5b620000d08562000091565b9350620000e06020860162000091565b92506080603f1982011215620000f557600080fd5b50604051608081016001600160401b03811182821017156200012757634e487b7160e01b600052604160045260246000fd5b6040908152850151815260608501516020820152620001496080860162000091565b60408201526200015c60a0860162000091565b6060820152809150509250925092565b608051612f4e6200023e60003960008181610386015281816104ce0152818161050e0152818161065b0152818161070c0152818161090501528181610960015281816109fb01528181610ab301528181610b5301528181610c2501528181610c9901528181610d7501528181610e2001528181610ea80152818161108601528181611197015281816112c60152818161137a015281816114bc0152818161150f0152818161181001528181611c1c01528181611cc501528181611d4b01528181611d9101526125760152612f4e6000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638583b7fa116100ee578063b5e893a511610097578063d289d96911610071578063d289d96914610381578063da09c72c146103a8578063e0a747fe146103bb578063e8a17c82146103c357600080fd5b8063b5e893a514610340578063b821da0b14610353578063c494448e1461036e57600080fd5b80639291d563116100c85780639291d5631461030757806397eef1871461031a578063a530882e1461032d57600080fd5b80638583b7fa146102d1578063865710f0146102d95780638dc1564a146102ec57600080fd5b8063529ebc7d11610150578063781a29d11161012a578063781a29d11461029a578063792a230f146102a357806382fc6b1d146102b657600080fd5b8063529ebc7d1461023d5780636099ecb2146102505780636eb604e01461028757600080fd5b80632d61a546116101815780632d61a546146101f6578063491cad29146102215780634b2d9ffc1461023457600080fd5b806301e1c48d146101a857806302eb6f7e146101ce578063174e31c4146101e3575b600080fd5b6101bb6101b63660046128fd565b6103d6565b6040519081526020015b60405180910390f35b6101e16101dc366004612929565b6103eb565b005b6101e16101f13660046128fd565b610796565b600254610209906001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b6101e161022f366004612991565b610f23565b6101bb60015481565b6101e161024b3660046129ae565b610fac565b61026361025e3660046128fd565b61117c565b6040805193845260208401929092526001600160a01b0316908201526060016101c5565b6101e1610295366004612a28565b61123d565b6101bb60005481565b600354610209906001600160a01b031681565b610209736a04a578247e15e3c038acf2686ca00a624a5aa081565b6101bb6114e8565b6101e16102e7366004612a28565b6115d1565b6102097322d4002028f537599be9f666d1c4fa138522f9c881565b6101e1610315366004612991565b611630565b6101e1610328366004612a28565b6116b9565b6101bb61033b3660046129ae565b611718565b6101e161034e366004612991565b611948565b610209735857019c749147eee22b1fe63500f237f3c1b69281565b6101e161037c366004612a41565b6119d1565b6102097f000000000000000000000000000000000000000000000000000000000000000081565b600454610209906001600160a01b031681565b6101e1611b72565b6101e16103d1366004612a28565b611c5e565b60006103e28383611d73565b90505b92915050565b6001600160a01b038085166000908152600560209081526040808320898452909152902054859187911633146104685760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c79537472617465677960448201526064015b60405180910390fd5b6104f68660008960405160240161048191815260200190565b60408051601f198184030181529190526020810180516001600160e01b03167f5312ea8e000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908516906370a0823190602401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190612a7a565b60405163907448ed60e01b81526001600160a01b0387811660048301526024820183905291925060009188169063907448ed90604401606060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190612aa8565b50506040516001600160a01b0389166024820152604481018490529091506106839086906000906064015b60408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b1790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516001600160a01b0387166024820152604481018390526064810182905233608482015260001960a482015261073490889060009060c4015b60408051601f198184030181529190526020810180516001600160e01b03167f09a5fca3000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516001600160a01b038916602482015260006044820181905261075f91879190606401610627565b506040516001600160a01b038816602482015260006044820181905261078a91889190606401610627565b50505050505050505050565b6001600160a01b0380831660009081526005602090815260408083208584529091529020548391839116331461080e5760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c795374726174656779604482015260640161045f565b6040517fbc70fdbc000000000000000000000000000000000000000000000000000000008152600481018490526000906001600160a01b0386169063bc70fdbc90602401600060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108979190810190612bb7565b506040516024810186905260006044820181905291925061092d9187916064015b60408051601f198184030181529190526020810180516001600160e01b03167fe2bbb158000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b507fffffffffffffffffffffffff4ce09955c3e187ac9c0f78a5e48b1d847a0299396001600160a01b038216016109e4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a556f516040518163ffffffff1660e01b81526004016020604051808303816000875af11580156109be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e29190612a7a565b505b6040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000907322d4002028f537599be9f666d1c4fa138522f9c8906370a0823190602401602060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190612a7a565b905060006001600160a01b038316610a9c576000610b26565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528416906370a0823190602401602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190612a7a565b90508115610df3576000808054118015610b4a57506003546001600160a01b031615155b8015610bd357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635392fd1c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd39190612c08565b15610cc35761271060005484610be99190612c39565b610bf39190612c58565b6040517f7c0bb4ab000000000000000000000000000000000000000000000000000000008152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637c0bb4ab90602401600060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b5050600354610cc392506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169250168361222e565b600080600154118015610ce057506002546001600160a01b031615155b15610d9f5761271060015485610cf69190612c39565b610d009190612c58565b6002546040516001600160a01b03909116602482015260448101829052909150610d9d907322d4002028f537599be9f666d1c4fa138522f9c8906000906064015b60408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b1790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b505b600081610dac8487612c7a565b610db69190612c7a565b60405133602482015260448101829052909150610dee907322d4002028f537599be9f666d1c4fa138522f9c890600090606401610d41565b505050505b8015610e1c5760405133602482015260448101829052610e1a908490600090606401610d41565b505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663129635956040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea09190612a7a565b1115610f1a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a71871226040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f0157600080fd5b505af1158015610f15573d6000803e3d6000fd5b505050505b50505050505050565b6004546001600160a01b03163314610f7d5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b0380871660009081526005602090815260408083208b8452909152902054879189911633146110245760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c795374726174656779604482015260640161045f565b60006110318686866122ae565b90506110476001600160a01b0388168987612416565b6040517f90d250740000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018790527f00000000000000000000000000000000000000000000000000000000000000008116604483015260001960648301528916906390d25074906084016020604051808303816000875af11580156110df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111039190612a7a565b506040516001600160a01b038a1660248201526044810182905261112e908790600090606401610627565b506111518960008c846040516024016108b8929190918252602082015260400190565b506040516001600160a01b038a166024820152600060448201819052610f1591889190606401610627565b600080600080600080876001600160a01b031663ffcd4263887f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016111e59291909182526001600160a01b0316602082015260400190565b600060405180830381865afa158015611202573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261122a9190810190612c91565b9298509196509450505050509250925092565b6004546001600160a01b031633146112975760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690736a04a578247e15e3c038acf2686ca00a624a5aa090636352211e90602401602060405180830381865afa15801561132b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134f9190612cf3565b6001600160a01b0316146113f8576040516323b872dd60e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260448101829052736a04a578247e15e3c038acf2686ca00a624a5aa0906323b872dd90606401600060405180830381600087803b1580156113df57600080fd5b505af11580156113f3573d6000803e3d6000fd5b505050505b604051735857019c749147eee22b1fe63500f237f3c1b69260248201526044810182905261144190736a04a578247e15e3c038acf2686ca00a624a5aa090600090606401610627565b506114e4735857019c749147eee22b1fe63500f237f3c1b69260008360405160240161146f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03167f4300f5e1000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b5050565b6000805481901580159061150657506003546001600160a01b031615155b801561158f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635392fd1c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561156b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158f9190612c08565b1561159957506000545b6000806001541180156115b657506002546001600160a01b031615155b156115c057506001545b6115ca8183612d10565b9250505090565b6004546001600160a01b0316331461162b5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b600055565b6004546001600160a01b0316331461168a5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b031633146117135760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b600155565b6001600160a01b0380871660009081526005602090815260408083208b8452909152812054909188918a911633146117925760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c795374726174656779604482015260640161045f565b600061179f8b8b8761254b565b90506118388a60008d846040516024016117c3929190918252602082015260400190565b60408051601f198184030181529190526020810180516001600160e01b03167f441a3e70000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516001600160a01b038a16602482015260448101829052611863908890600090606401610627565b5060006118718a8a8461260a565b61187b9083612c7a565b9050600061271061188c8984612c39565b6118969190612c58565b90506118a28183612c7a565b6040516001600160a01b038c166024820152604481018590526064810182905230608482015260001960a48201529092506000906118e6908d90839060c4016106bf565b6040516001600160a01b038e166024820152600060448201819052919250611912918c91606401610627565b506000611920826000612689565b90506119366001600160a01b038d16338361222e565b9e9d5050505050505050505050505050565b6004546001600160a01b031633146119a25760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b03163314611a2b5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6000816001600160a01b0316635eaec0e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a919190612a7a565b6001600160a01b0384811660009081526005602090815260408083208584529091529020549192501615611b2d5760405162461bcd60e51b815260206004820152603260248201527f506c617479707573566f74657250726f78793a3a537472617465677920666f7260448201527f2050494420616c72656164792061646465640000000000000000000000000000606482015260840161045f565b6001600160a01b03928316600090815260056020908152604080832093835292905220805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b6004546001600160a01b03163314611bcc5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6040805160048152602481019091526020810180516001600160e01b03167f6e0d323500000000000000000000000000000000000000000000000000000000179052611c5b906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690735857019c749147eee22b1fe63500f237f3c1b69290600090612131565b50565b6004546001600160a01b03163314611cb85760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152336044820152606481018290526114e490736a04a578247e15e3c038acf2686ca00a624a5aa09060009060840160408051601f198184030181529190526020810180516001600160e01b03166323b872dd60e01b1790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b6040516393f1a40b60e01b8152600481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015260009182918516906393f1a40b90604401606060405180830381865afa158015611de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e099190612d28565b5050905080600003611e1f5760009150506103e5565b60007fffffffffffffffffffffffff4fadc060b8c7ed04e6a11b64382d54678c567fbc6001600160a01b03861601611ec957604051631526fe2760e01b8152600481018590526001600160a01b03861690631526fe279060240160e060405180830381865afa158015611e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eba9190612d56565b50949550611f3e945050505050565b604051631526fe2760e01b8152600481018590526001600160a01b03861690631526fe279060240161010060405180830381865afa158015611f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f339190612dc1565b509596505050505050505b6000816001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa29190612cf3565b90506000806000836001600160a01b031663907448ed866001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201a9190612cf3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101899052604401606060405180830381865afa15801561207d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a19190612aa8565b9250925092508061211a5760405162461bcd60e51b815260206004820152602960248201527f506c617479707573566f74657250726f78793a3a546869732073686f756c646e60448201527f27742068617070656e0000000000000000000000000000000000000000000000606482015260840161045f565b6121248284612d10565b9998505050505050505050565b6060600080866001600160a01b031663b61d27f68787876040518463ffffffff1660e01b815260040161216693929190612e60565b6000604051808303816000875af1158015612185573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121ad9190810190612e91565b91509150816122245760405162461bcd60e51b815260206004820152602660248201527f506c617479707573566f74657250726f78793a3a73616665457865637574652060448201527f6661696c65640000000000000000000000000000000000000000000000000000606482015260840161045f565b9695505050505050565b6040516001600160a01b0383166024820152604481018290526122a990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526126ef565b505050565b6000836001600160a01b031663705727b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123129190612a7a565b60000361232a576123238284612c7a565b905061240f565b836001600160a01b031663705727b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015612368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238c9190612a7a565b846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ee9190612a7a565b6123f88486612c7a565b6124029190612c39565b61240c9190612c58565b90505b9392505050565b8015806124a957506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a79190612a7a565b155b61251b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161045f565b6040516001600160a01b0383166024820152604481018290526122a990849063095ea7b360e01b9060640161225a565b6000806125588486611d73565b6040516393f1a40b60e01b8152600481018790526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529192506000918616906393f1a40b90604401606060405180830381865afa1580156125cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ef9190612d28565b505090508181856126009190612c39565b6122249190612c58565b60405163907448ed60e01b81526001600160a01b038381166004830152602482018390526000919085169063907448ed90604401606060405180830381865afa15801561265b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267f9190612aa8565b5095945050505050565b6000612696826020612d10565b835110156126e65760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e64730000000000000000000000604482015260640161045f565b50016020015190565b6000612744826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127d49092919063ffffffff16565b8051909150156122a957808060200190518101906127629190612c08565b6122a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161045f565b606061240c8484600085856001600160a01b0385163b6128365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045f565b600080866001600160a01b031685876040516128529190612ee9565b60006040518083038185875af1925050503d806000811461288f576040519150601f19603f3d011682016040523d82523d6000602084013e612894565b606091505b50915091506128a48282866128af565b979650505050505050565b606083156128be57508161240f565b8251156128ce5782518084602001fd5b8160405162461bcd60e51b815260040161045f9190612f05565b6001600160a01b0381168114611c5b57600080fd5b6000806040838503121561291057600080fd5b823561291b816128e8565b946020939093013593505050565b600080600080600060a0868803121561294157600080fd5b853594506020860135612953816128e8565b93506040860135612963816128e8565b92506060860135612973816128e8565b91506080860135612983816128e8565b809150509295509295909350565b6000602082840312156129a357600080fd5b813561240f816128e8565b600080600080600080600060e0888a0312156129c957600080fd5b8735965060208801356129db816128e8565b955060408801356129eb816128e8565b945060608801356129fb816128e8565b93506080880135612a0b816128e8565b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215612a3a57600080fd5b5035919050565b60008060408385031215612a5457600080fd5b8235612a5f816128e8565b91506020830135612a6f816128e8565b809150509250929050565b600060208284031215612a8c57600080fd5b5051919050565b80518015158114612aa357600080fd5b919050565b600080600060608486031215612abd57600080fd5b8351925060208401519150612ad460408501612a93565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b83811015612b0e578181015183820152602001612af6565b83811115612b1d576000848401525b50505050565b600067ffffffffffffffff80841115612b3e57612b3e612add565b604051601f8501601f19908116603f01168101908282118183101715612b6657612b66612add565b81604052809350858152868686011115612b7f57600080fd5b612b8d866020830187612af3565b5050509392505050565b600082601f830112612ba857600080fd5b6103e283835160208501612b23565b60008060408385031215612bca57600080fd5b8251612bd5816128e8565b602084015190925067ffffffffffffffff811115612bf257600080fd5b612bfe85828601612b97565b9150509250929050565b600060208284031215612c1a57600080fd5b6103e282612a93565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612c5357612c53612c23565b500290565b600082612c7557634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612c8c57612c8c612c23565b500390565b60008060008060808587031215612ca757600080fd5b845193506020850151612cb9816128e8565b604086015190935067ffffffffffffffff811115612cd657600080fd5b612ce287828801612b97565b606096909601519497939650505050565b600060208284031215612d0557600080fd5b815161240f816128e8565b60008219821115612d2357612d23612c23565b500190565b600080600060608486031215612d3d57600080fd5b8351925060208401519150604084015190509250925092565b600080600080600080600060e0888a031215612d7157600080fd5b8751612d7c816128e8565b809750506020880151955060408801519450606088015193506080880151612da3816128e8565b8093505060a0880151915060c0880151905092959891949750929550565b600080600080600080600080610100898b031215612dde57600080fd5b8851612de9816128e8565b809850506020890151965060408901519550606089015194506080890151612e10816128e8565b60a08a015160c08b015160e0909b0151999c989b5096999598909790945092505050565b60008151808452612e4c816020860160208601612af3565b601f01601f19169290920160200192915050565b6001600160a01b0384168152826020820152606060408201526000612e886060830184612e34565b95945050505050565b60008060408385031215612ea457600080fd5b612ead83612a93565b9150602083015167ffffffffffffffff811115612ec957600080fd5b8301601f81018513612eda57600080fd5b612bfe85825160208401612b23565b60008251612efb818460208701612af3565b9190910192915050565b6020815260006103e26020830184612e3456fea2646970667358221220c2f6bc12c8de2c270ce24315ea1b48cd6aec7bd0ccd10a69e12311876eed995264736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a35760003560e01c80638583b7fa116100ee578063b5e893a511610097578063d289d96911610071578063d289d96914610381578063da09c72c146103a8578063e0a747fe146103bb578063e8a17c82146103c357600080fd5b8063b5e893a514610340578063b821da0b14610353578063c494448e1461036e57600080fd5b80639291d563116100c85780639291d5631461030757806397eef1871461031a578063a530882e1461032d57600080fd5b80638583b7fa146102d1578063865710f0146102d95780638dc1564a146102ec57600080fd5b8063529ebc7d11610150578063781a29d11161012a578063781a29d11461029a578063792a230f146102a357806382fc6b1d146102b657600080fd5b8063529ebc7d1461023d5780636099ecb2146102505780636eb604e01461028757600080fd5b80632d61a546116101815780632d61a546146101f6578063491cad29146102215780634b2d9ffc1461023457600080fd5b806301e1c48d146101a857806302eb6f7e146101ce578063174e31c4146101e3575b600080fd5b6101bb6101b63660046128fd565b6103d6565b6040519081526020015b60405180910390f35b6101e16101dc366004612929565b6103eb565b005b6101e16101f13660046128fd565b610796565b600254610209906001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b6101e161022f366004612991565b610f23565b6101bb60015481565b6101e161024b3660046129ae565b610fac565b61026361025e3660046128fd565b61117c565b6040805193845260208401929092526001600160a01b0316908201526060016101c5565b6101e1610295366004612a28565b61123d565b6101bb60005481565b600354610209906001600160a01b031681565b610209736a04a578247e15e3c038acf2686ca00a624a5aa081565b6101bb6114e8565b6101e16102e7366004612a28565b6115d1565b6102097322d4002028f537599be9f666d1c4fa138522f9c881565b6101e1610315366004612991565b611630565b6101e1610328366004612a28565b6116b9565b6101bb61033b3660046129ae565b611718565b6101e161034e366004612991565b611948565b610209735857019c749147eee22b1fe63500f237f3c1b69281565b6101e161037c366004612a41565b6119d1565b6102097f000000000000000000000000000000000000000000000000000000000000000081565b600454610209906001600160a01b031681565b6101e1611b72565b6101e16103d1366004612a28565b611c5e565b60006103e28383611d73565b90505b92915050565b6001600160a01b038085166000908152600560209081526040808320898452909152902054859187911633146104685760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c79537472617465677960448201526064015b60405180910390fd5b6104f68660008960405160240161048191815260200190565b60408051601f198184030181529190526020810180516001600160e01b03167f5312ea8e000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908516906370a0823190602401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190612a7a565b60405163907448ed60e01b81526001600160a01b0387811660048301526024820183905291925060009188169063907448ed90604401606060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190612aa8565b50506040516001600160a01b0389166024820152604481018490529091506106839086906000906064015b60408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b1790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516001600160a01b0387166024820152604481018390526064810182905233608482015260001960a482015261073490889060009060c4015b60408051601f198184030181529190526020810180516001600160e01b03167f09a5fca3000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516001600160a01b038916602482015260006044820181905261075f91879190606401610627565b506040516001600160a01b038816602482015260006044820181905261078a91889190606401610627565b50505050505050505050565b6001600160a01b0380831660009081526005602090815260408083208584529091529020548391839116331461080e5760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c795374726174656779604482015260640161045f565b6040517fbc70fdbc000000000000000000000000000000000000000000000000000000008152600481018490526000906001600160a01b0386169063bc70fdbc90602401600060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108979190810190612bb7565b506040516024810186905260006044820181905291925061092d9187916064015b60408051601f198184030181529190526020810180516001600160e01b03167fe2bbb158000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b507fffffffffffffffffffffffff4ce09955c3e187ac9c0f78a5e48b1d847a0299396001600160a01b038216016109e4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a556f516040518163ffffffff1660e01b81526004016020604051808303816000875af11580156109be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e29190612a7a565b505b6040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000907322d4002028f537599be9f666d1c4fa138522f9c8906370a0823190602401602060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190612a7a565b905060006001600160a01b038316610a9c576000610b26565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528416906370a0823190602401602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190612a7a565b90508115610df3576000808054118015610b4a57506003546001600160a01b031615155b8015610bd357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635392fd1c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd39190612c08565b15610cc35761271060005484610be99190612c39565b610bf39190612c58565b6040517f7c0bb4ab000000000000000000000000000000000000000000000000000000008152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637c0bb4ab90602401600060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b5050600354610cc392506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169250168361222e565b600080600154118015610ce057506002546001600160a01b031615155b15610d9f5761271060015485610cf69190612c39565b610d009190612c58565b6002546040516001600160a01b03909116602482015260448101829052909150610d9d907322d4002028f537599be9f666d1c4fa138522f9c8906000906064015b60408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b1790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b505b600081610dac8487612c7a565b610db69190612c7a565b60405133602482015260448101829052909150610dee907322d4002028f537599be9f666d1c4fa138522f9c890600090606401610d41565b505050505b8015610e1c5760405133602482015260448101829052610e1a908490600090606401610d41565b505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663129635956040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea09190612a7a565b1115610f1a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a71871226040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f0157600080fd5b505af1158015610f15573d6000803e3d6000fd5b505050505b50505050505050565b6004546001600160a01b03163314610f7d5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b0380871660009081526005602090815260408083208b8452909152902054879189911633146110245760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c795374726174656779604482015260640161045f565b60006110318686866122ae565b90506110476001600160a01b0388168987612416565b6040517f90d250740000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018790527f00000000000000000000000000000000000000000000000000000000000000008116604483015260001960648301528916906390d25074906084016020604051808303816000875af11580156110df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111039190612a7a565b506040516001600160a01b038a1660248201526044810182905261112e908790600090606401610627565b506111518960008c846040516024016108b8929190918252602082015260400190565b506040516001600160a01b038a166024820152600060448201819052610f1591889190606401610627565b600080600080600080876001600160a01b031663ffcd4263887f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016111e59291909182526001600160a01b0316602082015260400190565b600060405180830381865afa158015611202573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261122a9190810190612c91565b9298509196509450505050509250925092565b6004546001600160a01b031633146112975760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690736a04a578247e15e3c038acf2686ca00a624a5aa090636352211e90602401602060405180830381865afa15801561132b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134f9190612cf3565b6001600160a01b0316146113f8576040516323b872dd60e01b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260448101829052736a04a578247e15e3c038acf2686ca00a624a5aa0906323b872dd90606401600060405180830381600087803b1580156113df57600080fd5b505af11580156113f3573d6000803e3d6000fd5b505050505b604051735857019c749147eee22b1fe63500f237f3c1b69260248201526044810182905261144190736a04a578247e15e3c038acf2686ca00a624a5aa090600090606401610627565b506114e4735857019c749147eee22b1fe63500f237f3c1b69260008360405160240161146f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03167f4300f5e1000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b5050565b6000805481901580159061150657506003546001600160a01b031615155b801561158f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635392fd1c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561156b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158f9190612c08565b1561159957506000545b6000806001541180156115b657506002546001600160a01b031615155b156115c057506001545b6115ca8183612d10565b9250505090565b6004546001600160a01b0316331461162b5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b600055565b6004546001600160a01b0316331461168a5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b031633146117135760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b600155565b6001600160a01b0380871660009081526005602090815260408083208b8452909152812054909188918a911633146117925760405162461bcd60e51b815260206004820181905260248201527f506c617479707573566f74657250726f78793a3a6f6e6c795374726174656779604482015260640161045f565b600061179f8b8b8761254b565b90506118388a60008d846040516024016117c3929190918252602082015260400190565b60408051601f198184030181529190526020810180516001600160e01b03167f441a3e70000000000000000000000000000000000000000000000000000000001790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b506040516001600160a01b038a16602482015260448101829052611863908890600090606401610627565b5060006118718a8a8461260a565b61187b9083612c7a565b9050600061271061188c8984612c39565b6118969190612c58565b90506118a28183612c7a565b6040516001600160a01b038c166024820152604481018590526064810182905230608482015260001960a48201529092506000906118e6908d90839060c4016106bf565b6040516001600160a01b038e166024820152600060448201819052919250611912918c91606401610627565b506000611920826000612689565b90506119366001600160a01b038d16338361222e565b9e9d5050505050505050505050505050565b6004546001600160a01b031633146119a25760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b03163314611a2b5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6000816001600160a01b0316635eaec0e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a919190612a7a565b6001600160a01b0384811660009081526005602090815260408083208584529091529020549192501615611b2d5760405162461bcd60e51b815260206004820152603260248201527f506c617479707573566f74657250726f78793a3a537472617465677920666f7260448201527f2050494420616c72656164792061646465640000000000000000000000000000606482015260840161045f565b6001600160a01b03928316600090815260056020908152604080832093835292905220805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b6004546001600160a01b03163314611bcc5760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6040805160048152602481019091526020810180516001600160e01b03167f6e0d323500000000000000000000000000000000000000000000000000000000179052611c5b906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690735857019c749147eee22b1fe63500f237f3c1b69290600090612131565b50565b6004546001600160a01b03163314611cb85760405162461bcd60e51b815260206004820152601b60248201527f506c617479707573566f74657250726f78793a3a6f6e6c794465760000000000604482015260640161045f565b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152336044820152606481018290526114e490736a04a578247e15e3c038acf2686ca00a624a5aa09060009060840160408051601f198184030181529190526020810180516001600160e01b03166323b872dd60e01b1790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190612131565b6040516393f1a40b60e01b8152600481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015260009182918516906393f1a40b90604401606060405180830381865afa158015611de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e099190612d28565b5050905080600003611e1f5760009150506103e5565b60007fffffffffffffffffffffffff4fadc060b8c7ed04e6a11b64382d54678c567fbc6001600160a01b03861601611ec957604051631526fe2760e01b8152600481018590526001600160a01b03861690631526fe279060240160e060405180830381865afa158015611e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eba9190612d56565b50949550611f3e945050505050565b604051631526fe2760e01b8152600481018590526001600160a01b03861690631526fe279060240161010060405180830381865afa158015611f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f339190612dc1565b509596505050505050505b6000816001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa29190612cf3565b90506000806000836001600160a01b031663907448ed866001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201a9190612cf3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101899052604401606060405180830381865afa15801561207d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a19190612aa8565b9250925092508061211a5760405162461bcd60e51b815260206004820152602960248201527f506c617479707573566f74657250726f78793a3a546869732073686f756c646e60448201527f27742068617070656e0000000000000000000000000000000000000000000000606482015260840161045f565b6121248284612d10565b9998505050505050505050565b6060600080866001600160a01b031663b61d27f68787876040518463ffffffff1660e01b815260040161216693929190612e60565b6000604051808303816000875af1158015612185573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121ad9190810190612e91565b91509150816122245760405162461bcd60e51b815260206004820152602660248201527f506c617479707573566f74657250726f78793a3a73616665457865637574652060448201527f6661696c65640000000000000000000000000000000000000000000000000000606482015260840161045f565b9695505050505050565b6040516001600160a01b0383166024820152604481018290526122a990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526126ef565b505050565b6000836001600160a01b031663705727b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123129190612a7a565b60000361232a576123238284612c7a565b905061240f565b836001600160a01b031663705727b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015612368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238c9190612a7a565b846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ee9190612a7a565b6123f88486612c7a565b6124029190612c39565b61240c9190612c58565b90505b9392505050565b8015806124a957506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a79190612a7a565b155b61251b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161045f565b6040516001600160a01b0383166024820152604481018290526122a990849063095ea7b360e01b9060640161225a565b6000806125588486611d73565b6040516393f1a40b60e01b8152600481018790526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301529192506000918616906393f1a40b90604401606060405180830381865afa1580156125cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ef9190612d28565b505090508181856126009190612c39565b6122249190612c58565b60405163907448ed60e01b81526001600160a01b038381166004830152602482018390526000919085169063907448ed90604401606060405180830381865afa15801561265b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267f9190612aa8565b5095945050505050565b6000612696826020612d10565b835110156126e65760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e64730000000000000000000000604482015260640161045f565b50016020015190565b6000612744826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127d49092919063ffffffff16565b8051909150156122a957808060200190518101906127629190612c08565b6122a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161045f565b606061240c8484600085856001600160a01b0385163b6128365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045f565b600080866001600160a01b031685876040516128529190612ee9565b60006040518083038185875af1925050503d806000811461288f576040519150601f19603f3d011682016040523d82523d6000602084013e612894565b606091505b50915091506128a48282866128af565b979650505050505050565b606083156128be57508161240f565b8251156128ce5782518084602001fd5b8160405162461bcd60e51b815260040161045f9190612f05565b6001600160a01b0381168114611c5b57600080fd5b6000806040838503121561291057600080fd5b823561291b816128e8565b946020939093013593505050565b600080600080600060a0868803121561294157600080fd5b853594506020860135612953816128e8565b93506040860135612963816128e8565b92506060860135612973816128e8565b91506080860135612983816128e8565b809150509295509295909350565b6000602082840312156129a357600080fd5b813561240f816128e8565b600080600080600080600060e0888a0312156129c957600080fd5b8735965060208801356129db816128e8565b955060408801356129eb816128e8565b945060608801356129fb816128e8565b93506080880135612a0b816128e8565b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215612a3a57600080fd5b5035919050565b60008060408385031215612a5457600080fd5b8235612a5f816128e8565b91506020830135612a6f816128e8565b809150509250929050565b600060208284031215612a8c57600080fd5b5051919050565b80518015158114612aa357600080fd5b919050565b600080600060608486031215612abd57600080fd5b8351925060208401519150612ad460408501612a93565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b83811015612b0e578181015183820152602001612af6565b83811115612b1d576000848401525b50505050565b600067ffffffffffffffff80841115612b3e57612b3e612add565b604051601f8501601f19908116603f01168101908282118183101715612b6657612b66612add565b81604052809350858152868686011115612b7f57600080fd5b612b8d866020830187612af3565b5050509392505050565b600082601f830112612ba857600080fd5b6103e283835160208501612b23565b60008060408385031215612bca57600080fd5b8251612bd5816128e8565b602084015190925067ffffffffffffffff811115612bf257600080fd5b612bfe85828601612b97565b9150509250929050565b600060208284031215612c1a57600080fd5b6103e282612a93565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612c5357612c53612c23565b500290565b600082612c7557634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612c8c57612c8c612c23565b500390565b60008060008060808587031215612ca757600080fd5b845193506020850151612cb9816128e8565b604086015190935067ffffffffffffffff811115612cd657600080fd5b612ce287828801612b97565b606096909601519497939650505050565b600060208284031215612d0557600080fd5b815161240f816128e8565b60008219821115612d2357612d23612c23565b500190565b600080600060608486031215612d3d57600080fd5b8351925060208401519150604084015190509250925092565b600080600080600080600060e0888a031215612d7157600080fd5b8751612d7c816128e8565b809750506020880151955060408801519450606088015193506080880151612da3816128e8565b8093505060a0880151915060c0880151905092959891949750929550565b600080600080600080600080610100898b031215612dde57600080fd5b8851612de9816128e8565b809850506020890151965060408901519550606089015194506080890151612e10816128e8565b60a08a015160c08b015160e0909b0151999c989b5096999598909790945092505050565b60008151808452612e4c816020860160208601612af3565b601f01601f19169290920160200192915050565b6001600160a01b0384168152826020820152606060408201526000612e886060830184612e34565b95945050505050565b60008060408385031215612ea457600080fd5b612ead83612a93565b9150602083015167ffffffffffffffff811115612ec957600080fd5b8301601f81018513612eda57600080fd5b612bfe85825160208401612b23565b60008251612efb818460208701612af3565b9190910192915050565b6020815260006103e26020830184612e3456fea2646970667358221220c2f6bc12c8de2c270ce24315ea1b48cd6aec7bd0ccd10a69e12311876eed995264736f6c634300080d0033",
  "devdoc": {
    "details": "For accounting reasons, there is one approved strategy per Masterchef PID. In case of upgrade, use a new proxy.",
    "kind": "dev",
    "methods": {
      "approveStrategy(address,address)": {
        "details": "Very sensitive, restricted to devAddrCan only be set once per PID and staking contract (reported by the strategy)",
        "params": {
          "_stakingContract": "address",
          "_strategy": "address"
        }
      },
      "claimReward(address,uint256)": {
        "details": "Restricted to strategy with _pid",
        "params": {
          "_pid": "PID",
          "_stakingContract": "Platypus Masterchef"
        }
      },
      "deposit(uint256,address,address,address,address,uint256,uint256)": {
        "details": "Restricted to strategy with _pid",
        "params": {
          "_amount": "deposit amount",
          "_asset": "Platypus asset",
          "_depositFee": "deposit fee",
          "_pid": "PID",
          "_pool": "Platypus pool",
          "_stakingContract": "Platypus Masterchef",
          "_token": "Deposit asset"
        }
      },
      "emergencyWithdraw(uint256,address,address,address,address)": {
        "details": "Restricted to strategy with _pid",
        "params": {
          "_asset": "Platypus asset",
          "_pid": "PID",
          "_pool": "Platypus pool",
          "_stakingContract": "Platypus Masterchef",
          "_token": "Deposit asset"
        }
      },
      "pendingRewards(address,uint256)": {
        "params": {
          "_pid": "PID",
          "_stakingContract": "Platypus Masterchef"
        },
        "returns": {
          "_0": "pendingPtp",
          "_1": "pendingBonusToken",
          "_2": "bonusTokenAddress"
        }
      },
      "poolBalance(address,uint256)": {
        "params": {
          "_pid": "PID",
          "_stakingContract": "Platypus Masterchef"
        },
        "returns": {
          "balance": "in depositToken"
        }
      },
      "reinvestFeeBips()": {
        "returns": {
          "_0": "reinvest fee"
        }
      },
      "setBoosterFee(uint256)": {
        "details": "Restricted to devAddr",
        "params": {
          "_boosterFeeBips": "new fee in bips (1% = 100 bips)"
        }
      },
      "setBoosterFeeReceiver(address)": {
        "details": "Restricted to devAddr",
        "params": {
          "_boosterFeeReceiver": "address"
        }
      },
      "setStakerFee(uint256)": {
        "details": "Restricted to devAddr",
        "params": {
          "_stakerFeeBips": "new fee in bips (1% = 100 bips)"
        }
      },
      "setStakerFeeReceiver(address)": {
        "details": "Restricted to devAddr",
        "params": {
          "_stakerFeeReceiver": "address"
        }
      },
      "stakeNFT(uint256)": {
        "details": "Restricted to devAddr.The currently staked NFT will be automatically unstaked and remain on voter. Use \"sweepNFT\" to get it back.",
        "params": {
          "id": "id of the NFT to be staked"
        }
      },
      "sweepNFT(uint256)": {
        "details": "Restricted to devAddr.",
        "params": {
          "id": "id of the NFT to be swept"
        }
      },
      "unstakeNFT()": {
        "details": "Restricted to devAddr.The unstaked NFT will remain on voter. Use \"sweepNFT\" to get it back."
      },
      "updateDevAddr(address)": {
        "params": {
          "newValue": "address"
        }
      },
      "withdraw(uint256,address,address,address,address,uint256,uint256)": {
        "details": "Restricted to strategy with _pid",
        "params": {
          "_amount": "withdraw amount",
          "_asset": "Platypus asset",
          "_maxSlippage": "max slippage in bips",
          "_pid": "PID",
          "_pool": "Platypus pool",
          "_stakingContract": "Platypus Masterchef",
          "_token": "Deposit asset"
        },
        "returns": {
          "_0": "amount withdrawn, in _token"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveStrategy(address,address)": {
        "notice": "Add an approved strategy"
      },
      "claimReward(address,uint256)": {
        "notice": "Claim and distribute PTP rewards"
      },
      "deposit(uint256,address,address,address,address,uint256,uint256)": {
        "notice": "Deposit function"
      },
      "emergencyWithdraw(uint256,address,address,address,address)": {
        "notice": "Emergency withdraw function"
      },
      "pendingRewards(address,uint256)": {
        "notice": "Pending rewards matching interface for PlatypusStrategy"
      },
      "poolBalance(address,uint256)": {
        "notice": "Pool balance"
      },
      "reinvestFeeBips()": {
        "notice": "Calculation of reinvest fee (boost + staking)"
      },
      "setBoosterFee(uint256)": {
        "notice": "Update booster fee"
      },
      "setBoosterFeeReceiver(address)": {
        "notice": "Update booster fee receiver"
      },
      "setStakerFee(uint256)": {
        "notice": "Update staker fee"
      },
      "setStakerFeeReceiver(address)": {
        "notice": "Update staker fee receiver"
      },
      "stakeNFT(uint256)": {
        "notice": "Stake NFT "
      },
      "sweepNFT(uint256)": {
        "notice": "Sweep NFT"
      },
      "unstakeNFT()": {
        "notice": "Unstake the currently staked NFT "
      },
      "updateDevAddr(address)": {
        "notice": "Update devAddr"
      },
      "withdraw(uint256,address,address,address,address,uint256,uint256)": {
        "notice": "Withdraw function"
      }
    },
    "notice": "PlatypusVoterProxy is an upgradable contract. Strategies interact with PlatypusVoterProxy and PlatypusVoterProxy interacts with PlatypusVoter.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 41101,
        "contract": "contracts/strategies/platypus/PlatypusVoterProxy.sol:PlatypusVoterProxy",
        "label": "boosterFee",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 41103,
        "contract": "contracts/strategies/platypus/PlatypusVoterProxy.sol:PlatypusVoterProxy",
        "label": "stakerFee",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 41105,
        "contract": "contracts/strategies/platypus/PlatypusVoterProxy.sol:PlatypusVoterProxy",
        "label": "stakerFeeReceiver",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 41107,
        "contract": "contracts/strategies/platypus/PlatypusVoterProxy.sol:PlatypusVoterProxy",
        "label": "boosterFeeReceiver",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 41125,
        "contract": "contracts/strategies/platypus/PlatypusVoterProxy.sol:PlatypusVoterProxy",
        "label": "devAddr",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 41131,
        "contract": "contracts/strategies/platypus/PlatypusVoterProxy.sol:PlatypusVoterProxy",
        "label": "approvedStrategies",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}